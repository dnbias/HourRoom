version: '3'

services:

  config-server-app:
    build:
      context: ./hroom-server/config-server
    image: hroom-config-server-image
    restart: on-failure
    ports:
      - "8080:8080"
    container_name: config-server-app
    networks:
      - backend

  discovery-server-app:
    build:
      context: ./hroom-server/discovery-server
    image: hroom-discovery-server-image
    restart: on-failure
    ports:
      - "8081:8080"
    container_name: discovery-server-app
    depends_on:
      - config-server-app
      - mariadb-app
    networks:
      - backend

  tenant-microservice:
    build:
      context: ./hroom-server/tenant-service
    image: hroom-tenant-microservice-image
    restart: on-failure
    ports:
      - "8082:8080"
    container_name: tenant-microservice-app
    depends_on:
      - discovery-server-app
    networks:
      - backend

  admin-microservice:
    build:
      context: ./hroom-server/admin-service
    image: hroom-admin-microservice-image
    restart: on-failure
    ports:
      - "8083:8080"
    container_name: admin-microservice-app
    depends_on:
      - discovery-server-app
    networks:
      - backend

  landlord-microservice:
    build:
      context: ./hroom-server/landlord-service
    image: hroom-landlords-microservice-image
    restart: on-failure
    ports:
      - "8084:8080"
    container_name: landlord-microservice-app
    depends_on:
      - discovery-server-app
    networks:
      - backend

  insertion-microservice:
    build:
      context: ./hroom-server/insertion-service
    image: hroom-insertion-microservice-image
    restart: on-failure
    ports:
      - "8085:8080"
    container_name: insertion-microservice-app
    depends_on:
      - discovery-server-app
    networks:
      - backend

  reservation-microservice:
    build:
      context: ./hroom-server/reservation-service
      # dockerfile: docker/reservation-service/Dockerfile
    image: hroom-reservation-microservice-image
    restart: on-failure
    ports:
      - "8086:8080"
    container_name: reservation-microservice-app
    depends_on:
      - discovery-server-app
    networks:
      - backend

  check-in-microservice:
    build:
      context: ./hroom-server/check-in-service
    image: hroom-check-in-microservice-image
    restart: on-failure
    ports:
      - "8087:8080"
    container_name: check-in-microservice-app
    depends_on:
      - discovery-server-app
    networks:
      - backend

  check-out-microservice:
    build:
      context: ./hroom-server/check-out-service
    image: hroom-check-out-microservice-image
    restart: on-failure
    ports:
      - "8088:8080"
    container_name: check-out-microservice-app
    depends_on:
      - discovery-server-app
    networks:
      - backend

  feedback-tenant-microservice:
    build:
      context: ./hroom-server/feedback-tenant-service
    image: hroom-feedback-tenant-microservice-image
    restart: on-failure
    ports:
      - "8089:8080"
    container_name: feedback-tenant-microservice-app
    depends_on:
      - discovery-server-app
    networks:
      - backend

  feedback-insertion-microservice:
    build:
      context: ./hroom-server/feedback-insertion-service
    image: hroom-feedback-insertion-microservice-image
    restart: on-failure
    ports:
      - "8090:8080"
    container_name: feedback-insertion-microservice-app
    depends_on:
      - discovery-server-app
    networks:
      - backend

  web-app:
    build:
      context: ./hroom-web
      dockerfile: Dockerfile
    image: hroom-web-image
    ports:
      - "80:80"
    container_name: web-app
    depends_on:
      - discovery-server-app
    networks:
      - frontend

  # connettersi da locale al server mariadb di docker tramite localhost:3308
  # user: hroom
  # pass: hroom
  mariadb-app:
    image: mariadb:latest
    container_name: mariadb-app
    environment:
      MYSQL_DATABASE: hroom_database
      MYSQL_USER: hroom
      MYSQL_PASSWORD: hroom
      MYSQL_ROOT_PASSWORD: root_password
    ports:
      - "3306:3308"
    volumes:
      - mariadb-data:/var/lib/mysql
    networks:
      - backend

  rabbitmq:
    image: "rabbitmq:3-management"
    container_name: "rmq3"
    environment:
      RABBITMQ_DEFAULT_USER: "rabbitmq"
      RABBITMQ_DEFAULT_PASS: "123456"
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - backend

volumes:
  mariadb-data: {}

networks:
  backend:
    driver: bridge
  frontend: {}
